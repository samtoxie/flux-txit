---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: minio
  namespace: minio
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.3.2
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      minio:
        containers:
          app:
            image:
              repository: quay.io/minio/minio
              tag: RELEASE.2024-08-03T04-33-23Z@sha256:c933bb53ac226d1f4bdfeac66a3854d02903771e91d7ee2cbc330841a1d77d7e
            env:
              MINIO_API_CORS_ALLOW_ORIGIN: https://minio.dagobah.txit.me,https://s3.dagobah.txit.me
              MINIO_BROWSER_REDIRECT_URL: https://minio.dagobah.txit.me
              # MINIO_PROMETHEUS_JOB_ID: minio
              # MINIO_PROMETHEUS_URL: https://prometheus.286k.co
              # MINIO_PROMETHEUS_AUTH_TYPE: public
              MINIO_SERVER_URL: https://s3.dagobah.txit.me
              MINIO_UPDATE: "off"
              MINIO_ROOT_USER:
                secretKeyRef:
                  name: minio-root-user
                  key: username
              MINIO_ROOT_PASSWORD:
                secretKeyRef:
                  name: minio-root-user
                  key: password
            args: ["server", "/data", "--console-address", ":9001"]
            # probes:
            #   liveness: &probes
            #     enabled: true
            #     custom: true
            #     spec:
            #       httpGet:
            #         path: /minio/health/live
            #         port: 9000
            #       initialDelaySeconds: 30
            #       periodSeconds: 30
            #       timeoutSeconds: 10
            #       failureThreshold: 6
            #   readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
              limits:
                memory: 2Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [10000]
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: minio
        ports:
          http:
            port: 9001
          s3:
            port: 9000
    # serviceMonitor:
    #   app:
    #     serviceName: minio
    #     endpoints:
    #       - port: s3
    #         scheme: http
    #         path: /minio/v2/metrics/cluster
    #         interval: 1m
    #         scrapeTimeout: 10s
    ingress:
      app:
        className: nginx
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-prod-dns"
          nginx.ingress.kubernetes.io/proxy-body-size: 2g
        hosts:
          - host: "minio.dagobah.txit.me"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
          - host: "s3.dagobah.txit.me"
            paths:
              - path: /
                service:
                  identifier: app
                  port: s3
        tls:
          - hosts:
              - "minio.dagobah.txit.me"
              - "s3.dagobah.txit.me"
            secretName: minio-http-tls
    persistence:
      data:
        type: persistentVolumeClaim
        accessMode: ReadWriteOnce
        size: 100Gi
        storageClass: juicefs
        advancedMounts:
          minio:
            app:
              - path: /data
